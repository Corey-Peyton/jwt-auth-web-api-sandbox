<project xmlns="http://maven.apache.org/POM/4.0.0"
       	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!-- =========== PROJET PARENT ========== -->
	<parent>
		<groupId>fr.vincent.tuto</groupId>
		<artifactId>jwt-auth-web-api-sandbox</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	<!-- BACK-END SERVER -->
	<artifactId>jwt-auth-web-api-back-end</artifactId>
	<name><![CDATA[Gestion de produits et des utilisateurs REST API - Back-End Server]]></name>
	<description><![CDATA[Serveur de la gestion de l'Authentification et l'Autorisation d'accès aux ressources.]]></description>
	<inceptionYear>2021</inceptionYear>
	<!-- ============== PROPRIETES ================= -->
	<properties>
		<start-class>fr.vincent.tuto.server.BackendApplicationStarter</start-class>
	</properties>
	<!-- =========== DEPENDANCES ========== -->
	<dependencies>
		<!-- Service commun des API -->
		<dependency>
			<groupId>fr.vincent.tuto</groupId>
			<artifactId>oauth-common-app</artifactId>
			<version>${project.parent.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.postgresql</groupId>
					<artifactId>postgresql</artifactId>
				</exclusion>
				<!-- les dépendances OAuth2 -->
				<exclusion>
					<groupId>org.springframework.security.oauth</groupId>
					<artifactId>spring-security-oauth2</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Utilisation de @ConfigurationProperties -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- IO Utils -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>
		<!-- JWT dependences supplémentaires -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-jwt</artifactId>
			<version>1.1.1.RELEASE</version>
		</dependency>
		<!-- Pour optimiser les accès aux données -->
		<dependency>
			<groupId>org.ehcache</groupId>
			<artifactId>ehcache</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.cache</groupId>
			<artifactId>cache-api</artifactId>
		</dependency>
		<!-- Migration de base avec Flyway -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<!-- MariaDB -->
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
		</dependency>
		<!-- JDBC -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<!-- TESTS -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- Make method based security testing easier -->
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-library</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.assertj</groupId>
					<artifactId>assertj-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<!-- Util for spring-test running -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<!-- ================= BUILD ================= -->
	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<directory>${basedir}/target</directory>
		<outputDirectory>${basedir}/target/classes</outputDirectory>
		<testOutputDirectory>${basedir}/target/test-classes</testOutputDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
					<include>**/**</include>
					<!-- Inclure les dossiers par exemple : db/migration -->
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
					<exclude>*.test.*</exclude>
				</excludes>
			</resource>
		</resources>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<!-- Plugins -->
		<plugins>
			<!-- Plugin Maven pour la compilation des sources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<!-- Construire l'archive -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>
			<!-- ajout des sources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<!-- getion des ressources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<!-- Configuration pour intégrer le Client Angular -->
				<!-- <executions> -->
				<!-- <execution> -->
				<!-- <id>copy-resources</id> -->
				<!-- <phase>validate</phase> -->
				<!-- <goals> -->
				<!-- <goal>copy-resources</goal> -->
				<!-- </goals> -->
				<!-- <configuration> -->
				<!-- <outputDirectory>${project.build.directory}/classes/resources/</outputDirectory> -->
				<!-- <resources> -->
				<!-- <resource> -->
				<!-- <directory>${project.parent.basedir}/oauth-authorization-ui/src/main/web/dist/authorization-admin-ui/</directory> -->
				<!-- </resource> -->
				<!-- </resources> -->
				<!-- </configuration> -->
				<!-- </execution> -->
				<!-- </executions> -->
			</plugin>
			<!-- Tests Unitaires -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<!-- Tests Integration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
			<!-- Metriques de couverture des Tests Automatises -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			<!-- JavaDoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>
			<!-- BOOT -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>