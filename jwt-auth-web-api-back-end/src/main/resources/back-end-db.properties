############################################################
### CONFIGURATION MIGRATION DE BASES DE DONNEES AVEC FLYWAY
############################################################
spring.flyway.enabled=true
spring.flyway.group=true
spring.flyway.baseline-on-migrate=true
spring.flyway.sql-migration-prefix=V
spring.flyway.sql-migration-separator=__
spring.flyway.sql-migration-suffixes=.sql
#spring.flyway.locations=classpath:db/migration/mariadb
#spring.flyway.locations=classpath:db/migration/h2
spring.flyway.locations=classpath:db/migration/postgresql

###################################
### APPLICATION CUSTOM PROPERTIES
###################################
# datasource-props props custom
vot.datasource-props.type=com.zaxxer.hikari.HikariDataSource
#vot.datasource-props.driver-class-name=org.mariadb.jdbc.Driver
#vot.datasource-props.url=jdbc:mariadb://localhost:3306/jwtauthweb?useSSL=false&useUnicode=true&characterEncoding=utf8
#vot.datasource-props.jdbcUrl=${vot.datasource-props.url}
#vot.datasource-props.datasource-class-name=org.mariadb.jdbc.MariaDbDataSource
#vot.datasource-props.user-name=root
#vot.datasource-props.password=vincent
#vot.datasource-props.platform=MYSQL
vot.datasource-props.test-while-idle =true
vot.datasource-props.validation-query =SELECT 1
vot.datasource-props.pool-prepared-statements=true
vot.datasource-props.max-open-prepared-statements=250
vot.datasource-props.persistence-unit-name=JwtRestSecureServerPU
vot.datasource-props.package-to-scan=fr.vincent.tuto.server.model.po
vot.datasource-props.generate-ddl=false

##########
### H2
##########
#vot.datasource-props.driver-class-name=org.h2.Driver
#vot.datasource-props.url=jdbc:h2:mem:security_permission;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#vot.datasource-props.jdbcUrl=${vot.datasource-props.url}
#vot.datasource-props.datasource-class-name=org.h2.jdbcx.JdbcDataSource
#vot.datasource-props.user-name=sa
#vot.datasource-props.password=
#vot.datasource-props.platform=H2
#vot.jpa-hibernate-props.database-name=H2
#vot.jpa-hibernate-props.dialect=org.hibernate.dialect.H2Dialect

################
### POSTGRESQL
################
vot.datasource-props.driver-class-name=org.postgresql.Driver
vot.datasource-props.url=jdbc:postgresql://localhost:5432/jwtauthweb?useSSL=false
vot.datasource-props.jdbcUrl=${vot.datasource-props.url}
vot.datasource-props.user-name=vincent
vot.datasource-props.password=vincent
vot.datasource-props.platform=POSTGRESQL
vot.jpa-hibernate-props.database-name=POSTGRESQL
vot.jpa-hibernate-props.dialect=org.hibernate.dialect.PostgreSQL9Dialect

# pour le gestionnaire de pool Hikari
vot.datasource-props.cache-prepare-statements=cachePrepStmts
vot.datasource-props.prepare-statement-cache-size=prepStmtCacheSize
vot.datasource-props.prepare-statement-cache-sql-limit=prepStmtCacheSqlLimit
vot.datasource-props.use-server-prepare-statements=useServerPrepStmts

# Propriétés pour le chargement des données au démarrage de l'application avec Spring JDBC initializer (démarche non programmatique pour les bases embarquées)
vot.datasource-props.initialization-mode=never
vot.datasource-props.init-schema=
vot.datasource-props.init-schema=
vot.datasource-props.init-data=
vot.datasource-props.init-continue-on-error=

# JPA Hibernate specific configs custom
#vot.jpa-hibernate-props.database-name=MYSQL
#vot.jpa-hibernate-props.dialect=org.hibernate.dialect.MySQL5Dialect
vot.jpa-hibernate-props.show_sql=true
vot.jpa-hibernate-props.format_sql=true
vot.jpa-hibernate-props.use_sql=true
vot.jpa-hibernate-props.use_sql_comments=true
vot.jpa-hibernate-props.bytecode_use_reflection_optimizer=false
vot.jpa-hibernate-props.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
vot.jpa-hibernate-props.use-second-level-cache=false
vot.jpa-hibernate-props.generate-statistics=false
vot.jpa-hibernate-props.use-reflection-optimizer=false
## Hibernate ddl auto : create | update | validate | create-drop | none | drop
vot.jpa-hibernate-props.ddl-auto=validate
vot.jpa-hibernate-props.enable_lazy=true
vot.jpa-hibernate-props.hbm2ddl-import-files=
vot.jpa-hibernate-props.generate-ddl=true

# Hikari will use the above plus the following to setup connection pooling
vot.hikari-props.minimum-idle=5
vot.hikari-props.maximum-pool-size=20
vot.hikari-props.idle-timeout=30000
vot.hikari-props.pool-name=JwtRestSecureServerCP
vot.hikari-props.max-lifetime=2000000
vot.hikari-props.connection-timeout=30000
# Customisation des propriétés de la DS pour le gestionnaire de pools
vot.hikari-props.cache-prepare-statements=true
vot.hikari-props.prepare-statement-cache-size=250
vot.hikari-props.prepare-statement-cache-sql-limit=2048
vot.hikari-props.use-server-prepare-statements=true