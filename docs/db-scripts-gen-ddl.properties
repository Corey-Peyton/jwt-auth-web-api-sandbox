###########################################################
####  CONFIGURATION DE GENERATION DES SCRIPTS AU DEMARRAGE
###########################################################

##########
### H2
##########
vot.datasource-props.type=com.zaxxer.hikari.HikariDataSource
vot.datasource-props.driver-class-name=org.h2.Driver
vot.datasource-props.url=jdbc:h2:mem:security_permission;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
vot.datasource-props.jdbcUrl=${vot.datasource-props.url}
vot.datasource-props.datasource-class-name=org.h2.jdbcx.JdbcDataSource
vot.datasource-props.user-name=sa
vot.datasource-props.password=
vot.datasource-props.test-while-idle =true
vot.datasource-props.validation-query =SELECT 1
vot.datasource-props.pool-prepared-statements=true
vot.datasource-props.max-open-prepared-statements=250
vot.datasource-props.persistence-unit-name=JwtRestSecureServerPUGen
vot.datasource-props.package-to-scan=fr.vincent.tuto.server.model.po
vot.datasource-props.generate-ddl=false
vot.datasource-props.platform=H2
# Génération des scripts DDL
spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=drop-and-create
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=./src/test/resources/db/h2/create-schema-h2.sql
spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=./src/test/resources/db/h2/drop-schema-h2.sql

###############
### MARIADB
###############
vot.datasource-props.type=com.zaxxer.hikari.HikariDataSource
vot.datasource-props.driver-class-name=org.mariadb.jdbc.Driver
vot.datasource-props.url=jdbc:mariadb://localhost:3306/jwtauthweb?useSSL=false
vot.datasource-props.jdbcUrl=${vot.datasource-props.url}
vot.datasource-props.datasource-class-name=org.mariadb.jdbc.MariaDbDataSource
vot.datasource-props.user-name=root
vot.datasource-props.password=vincent
vot.datasource-props.test-while-idle =true
vot.datasource-props.validation-query =SELECT 1
vot.datasource-props.pool-prepared-statements=true
vot.datasource-props.max-open-prepared-statements=250
vot.datasource-props.persistence-unit-name=JwtRestSecureServerPUGen
vot.datasource-props.package-to-scan=fr.vincent.tuto.server.model.po
vot.datasource-props.generate-ddl=false
vot.datasource-props.platform=MYSQL
# Génération des scripts DDL
spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=drop-and-create
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=./src/test/resources/db/mariadb/create-schema-mariadb.sql
spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=./src/test/resources/db/mariadb/drop-schema-mariadb.sql

# Génération des scripts DDL
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=drop-and-create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=./src/main/resources/db/migration/mariadb/create-tables-mariadb.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=./src/main/resources/db/migration/mariadb/drop-tables-mariadb.sql
#spring.jpa.properties.javax.persistence.schema-generation.drop-source=script
#spring.jpa.properties.javax.persistence.schema-generation.drop-script-source=drop-tables.sql

################
### POSTGRESQL
################
vot.datasource-props.type=com.zaxxer.hikari.HikariDataSource
vot.datasource-props.driver-class-name=org.postgresql.Driver
vot.datasource-props.url=jdbc:postgresql://localhost:5432/jwtauthweb?useSSL=false
vot.datasource-props.jdbcUrl=${vot.datasource-props.url}
vot.datasource-props.user-name=vincent
vot.datasource-props.password=vincent
vot.datasource-props.test-while-idle =true
vot.datasource-props.validation-query =SELECT 1
vot.datasource-props.pool-prepared-statements=true
vot.datasource-props.max-open-prepared-statements=250
vot.datasource-props.persistence-unit-name=JwtRestSecureServerPUGen
vot.datasource-props.package-to-scan=fr.vincent.tuto.server.model.po
vot.datasource-props.generate-ddl=false
vot.datasource-props.platform=POSTGRESQL
#spring.jpa-hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect
# Génération des scripts DDL
spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=drop-and-create
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=./src/test/resources/db/postgresql/create-schema-postgresql.sql
spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=./src/test/resources/db/postgresql/drop-schema-postgresql.sql

#############
### MYSQL
#############
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
## Driver pour Spring boot 2.1.9
##spring.datasource.driver-class-name=com.mysql.jdbc.Driver
## Nouveau Driver pour Spring boot 2.3.4
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
##spring.datasource.url=jdbc:mysql://localhost:3306/jwtauth?useSSL=false
## Correction problème de fuseau horaire
#spring.datasource.url=jdbc:mysql://localhost:3306/jwtauthweb?useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
#spring.datasource.jdbcUrl=${spring.datasource.url}
#spring.datasource.datasource-class-name=com.mysql.jdbc.jdbc2.optional.MysqlDataSource
#spring.datasource.username=root
#spring.datasource.password=
#spring.datasource.testWhileIdle =true
#spring.datasource.validationQuery =SELECT 1
#spring.datasource.pool-prepared-statements=true
#spring.datasource.max-open-prepared-statements=250
#spring.jpa.database=MYSQL
# Génération des scripts DDL
#spring.jpa-hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=drop-and-create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=./src/test/resources/db/create-schema-mysql.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=./src/test/resources/db/drop-schema-mysql.sql

################
### SQL SERVER
################
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.datasource.url=jdbc:sqlserver://localhost:1433;instanceName=SQLEXPRESS;databaseName=jwtauthweb;Persist Security Info=False;useSSL=False
#spring.datasource.jdbcUrl=${spring.datasource.url}
#spring.datasource.datasource-class-name=com.microsoft.sqlserver.jdbc.SQLServerDataSource
#spring.datasource.username=sa
#spring.datasource.password=
#spring.datasource.testWhileIdle =true
#spring.datasource.validationQuery =SELECT 1
#spring.datasource.pool-prepared-statements=true
#spring.datasource.max-open-prepared-statements=250
#spring.jpa.database=SQL_SERVER
#spring.jpa-hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=drop-and-create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=./src/test/resources/db/create-schema-sql-server.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=./src/test/resources/db/drop-schema-sql-server.sql

################
### ORACLE 11G
################
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
##spring.datasource.url=jdbc:oracle:thin:@localhost:1521:XE?useSSL=false
#spring.datasource.url=jdbc:oracle:thin:@(DESCRIPTION=(FAILOVER=ON)(LOAD_BALANCE=ON)(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=127.0.0.1)(PORT=1521)))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=XE)))?useSSL=false
#spring.datasource.jdbcUrl=${spring.datasource.url}
#votjwt.datasource-props.datasource-class-name=oracle.jdbc.OracleDataSource
#spring.datasource.username=vincent
#spring.datasource.password=
#spring.datasource.testWhileIdle =true
#spring.datasource.validationQuery =SELECT 1
#spring.datasource.pool-prepared-statements=true
#spring.datasource.max-open-prepared-statements=250
#spring.jpa.database=ORACLE
#spring.jpa-hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=drop-and-create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=./src/test/resources/db/create-schema-oracle.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=./src/test/resources/db/drop-schema-oracle.sql

#
## Hikari will use the above plus the following to setup connection pooling
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=20
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.poolName=JwtRestSecureServerCPGen
spring.datasource.hikari.maxLifetime=2000000
spring.datasource.hikari.connectionTimeout=30000
#
## JPA specific configs
#spring.jpa.database=H2
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.bytecode.use_reflection_optimizer=false
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.hibernate.use-second-level-cache=false
spring.jpa.hibernate.generate-statistics=true
spring.jpa.hibernate.use-reflection-optimizer=true
## Hibernate ddl auto : create | update | validate | create-drop
spring.jpa.hibernate.ddl-auto=create
